{"version":3,"sources":["math.ts","App.tsx","index.tsx"],"names":["calcDistance","p1","p2","Math","sqrt","x","y","mostDistantPoint","target","center","radius","box","distance","Array","from","length","map","_","i","PI","angle","cos","sin","pointOnCircumference","filter","point","width","height","random","sort","c1","c2","pop","isZero","obj","Object","values","every","n","EscapingButton","position","style","useMemo","top","left","className","App","backgroundRef","useRef","useState","viewport","set","observeSize","useCallback","observer","ResizeObserver","entry","rect","getBoundingClientRect","observe","unobserve","useViewportSize","mousePosition","observeMousePosition","onMouseMove","ev","addEventListener","removeEventListener","useMousePositionTracking","buttonPosition","setButtonPosition","useButtonPosition","useEffect","current","unobserveSize","unobservePosition","nextPosition","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bee8a80a.chunk.js","sourcesContent":["type Point = {\n  x: number;\n  y: number;\n};\n\ntype Box = {\n  width: number;\n  height: number;\n};\n\nexport const calcDistance = (p1: Point, p2: Point) => {\n  return Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n};\n\nexport const pointOnCircumference = (\n  center: Point,\n  radius: number,\n  angle: number\n) => {\n  return {\n    x: center.x + radius * Math.cos(angle),\n    y: center.y + radius * Math.sin(angle),\n  };\n};\n\nexport const mostDistantPoint = (\n  target: Point,\n  center: Point,\n  radius: number,\n  box: Box\n) => {\n  const distance = calcDistance(target, center);\n  return Array.from({ length: 100 })\n    .map((_, i) => (2 * Math.PI * i) / 100)\n    .map((angle) => pointOnCircumference(center, radius, angle))\n    .filter(\n      (point) =>\n        point.x > 50 &&\n        point.y > 50 &&\n        point.x < box.width - 50 &&\n        point.y < box.height - 50\n    )\n    .map((point) => ({\n      point,\n      // ちょっとランダム要素を入れる\n      distance: calcDistance(target, point) + (Math.random() * distance) / 10,\n    }))\n    .sort((c1, c2) => c1.distance - c2.distance)\n    .pop()!.point;\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  VFC,\n} from \"react\";\nimport \"./App.css\";\nimport { calcDistance, mostDistantPoint } from \"./math\";\n\ntype Viewport = {\n  width: number;\n  height: number;\n};\n\ntype Position = {\n  x: number;\n  y: number;\n};\n\nconst ESCAPING_THRESHOLD_DISTANCE = 200;\nconst ESCAPING_DISTANCE = 200;\n\nconst isZero = (obj: Record<string, number>) =>\n  Object.values(obj).every((n) => n === 0);\n\nconst useViewportSize = () => {\n  const [viewport, set] = useState<Viewport>({ width: 0, height: 0 });\n  const observeSize = useCallback((target: HTMLElement) => {\n    const observer = new ResizeObserver(([entry]) => {\n      if (!entry) {\n        return;\n      }\n      const rect = entry.target.getBoundingClientRect();\n      set({\n        width: rect.width,\n        height: rect.height,\n      });\n    });\n    observer.observe(target);\n    return () => {\n      observer.unobserve(target);\n    };\n  }, []);\n  return {\n    viewport,\n    observeSize,\n  };\n};\n\nconst useMousePositionTracking = () => {\n  const [mousePosition, set] = useState<Position>({\n    x: 0,\n    y: 0,\n  });\n  const observeMousePosition = useCallback((target: HTMLElement) => {\n    const onMouseMove = (ev: MouseEvent) => {\n      const { x, y } = ev;\n      set({ x, y });\n    };\n    target.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      target.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, []);\n\n  return {\n    mousePosition,\n    observeMousePosition,\n  };\n};\n\nconst useButtonPosition = () => {\n  const [buttonPosition, setButtonPosition] = useState<Position>({\n    x: 400,\n    y: 400,\n  });\n  return {\n    buttonPosition,\n    setButtonPosition,\n  };\n};\n\nconst EscapingButton: VFC<{\n  position: Position;\n}> = ({ position }) => {\n  const { x, y } = position;\n  const style = useMemo(\n    () => ({\n      top: `${y}px`,\n      left: `${x}px`,\n    }),\n    [x, y]\n  );\n  return (\n    <button className=\"escaping-button secondary\" style={style}>\n      CLICK ME IN THE RYE\n    </button>\n  );\n};\n\nfunction App() {\n  const backgroundRef = useRef<HTMLDivElement>(null);\n  const { viewport, observeSize } = useViewportSize();\n  const { mousePosition, observeMousePosition } = useMousePositionTracking();\n  const { buttonPosition, setButtonPosition } = useButtonPosition();\n\n  useEffect(() => {\n    const target = backgroundRef.current;\n    if (target) {\n      const unobserveSize = observeSize(target);\n      const unobservePosition = observeMousePosition(target);\n      return () => {\n        unobserveSize();\n        unobservePosition();\n      };\n    } else {\n      return () => {};\n    }\n  }, [observeSize, observeMousePosition]);\n\n  useEffect(() => {\n    if (isZero(mousePosition) || isZero(viewport)) {\n      return;\n    }\n\n    if (\n      calcDistance(mousePosition, buttonPosition) > ESCAPING_THRESHOLD_DISTANCE\n    ) {\n      return;\n    }\n\n    const nextPosition = mostDistantPoint(\n      mousePosition,\n      buttonPosition,\n      ESCAPING_DISTANCE,\n      viewport\n    );\n    setButtonPosition(nextPosition);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    mousePosition.x,\n    mousePosition.y,\n    buttonPosition.x,\n    buttonPosition.y,\n    viewport.width,\n    viewport.height,\n  ]);\n\n  return (\n    <>\n      <div className=\"background\" ref={backgroundRef}></div>;\n      <EscapingButton position={buttonPosition} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}